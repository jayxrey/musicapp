{"ast":null,"code":"var _jsxFileName = \"/Users/jreyes/Desktop/musicapp/frontend/src/components/NewSongForm.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewSongForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pk: 0,\n      song: \"\",\n      artist: \"\",\n      album: \"\",\n      genre: \"\",\n      year: 0\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createSongs = e => {\n      e.preventDefault();\n      axios.post(API_URL, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.editSongs = e => {\n      e.preventDefault();\n      axios.put(API_URL + this.state.pk, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.defaultIfEmpty = value => {\n      return value === \"\" ? \"\" : value;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.songs) {\n      const {\n        pk,\n        song,\n        artist,\n        album,\n        genre\n      } = this.props.songs;\n      this.setState({\n        pk,\n        song,\n        artist,\n        album,\n        genre\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.props.songs ? this.editSongs : this.createSongs,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"song\",\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"song\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.song)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"artist\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"artist\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.artist)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"album\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"album\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.album)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"genre\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"genre\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.genre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"year\",\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"year\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewSongForm;","map":{"version":3,"sources":["/Users/jreyes/Desktop/musicapp/frontend/src/components/NewSongForm.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","NewSongForm","Component","state","pk","song","artist","album","genre","year","onChange","e","setState","target","name","value","createSongs","preventDefault","post","then","props","resetState","toggle","editSongs","put","defaultIfEmpty","componentDidMount","songs","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nimport axios from \"axios\";\n\nimport { API_URL } from \"../constants\";\n\nclass NewSongForm extends React.Component {\n  state = {\n    pk: 0,\n    song: \"\",\n    artist: \"\",\n    album: \"\",\n    genre: \"\",\n    year: 0\n  };\n\n  componentDidMount() {\n    if (this.props.songs) {\n      const { pk, song, artist, album, genre } = this.props.songs;\n      this.setState({ pk, song, artist, album, genre });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  createSongs = e => {\n    e.preventDefault();\n    axios.post(API_URL, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  editSongs = e => {\n    e.preventDefault();\n    axios.put(API_URL + this.state.pk, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  defaultIfEmpty = value => {\n    return value === \"\" ? \"\" : value;\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.props.songs ? this.editSongs : this.createSongs}>\n        <FormGroup>\n          <Label for=\"song\">Song</Label>\n          <Input\n            type=\"text\"\n            name=\"song\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.song)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"artist\">Artist</Label>\n          <Input\n            type=\"text\"\n            name=\"artist\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.artist)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"album\">Album</Label>\n            <Input\n              type=\"text\"\n              name=\"album\"\n              onChange={this.onChange}\n              value={this.defaultIfEmpty(this.state.album)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"genre\">Genre</Label>\n            <Input\n              type=\"text\"\n              name=\"genre\"\n              onChange={this.onChange}\n              value={this.defaultIfEmpty(this.state.genre)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"year\">Year</Label>\n            <Input\n              type=\"text\"\n              name=\"year\"\n              onChange={this.onChange}\n              value={this.defaultIfEmpty(this.state.year)}\n          />\n        </FormGroup>\n        <Button>Send</Button>\n      </Form>\n    );\n  }\n}\n\nexport default NewSongForm;\n"]},"metadata":{},"sourceType":"module"}