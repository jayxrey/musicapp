{"ast":null,"code":"var _jsxFileName = \"/Users/jreyes/Desktop/musicapp2/frontend/src/components/RatingsForm.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RatingsForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      song: \"\",\n      rating: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.createRatings = e => {\n      e.preventDefault();\n      axios.post(API_URL, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.editRatings = e => {\n      e.preventDefault();\n      axios.put(API_URL + this.state.pk, this.state).then(() => {\n        this.props.resetState();\n        this.props.toggle();\n      });\n    };\n\n    this.defaultIfEmpty = value => {\n      return value === \"\" ? \"\" : value;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.ratings) {\n      const {\n        username,\n        song,\n        rating\n      } = this.props.ratings;\n      this.setState({\n        username,\n        song,\n        rating\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.props.songs ? this.editRatings : this.createRatings,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"song\",\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"song\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.song)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"rating\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"rating\",\n          onChange: this.onChange,\n          value: this.defaultIfEmpty(this.state.rating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RatingsForm;","map":{"version":3,"sources":["/Users/jreyes/Desktop/musicapp2/frontend/src/components/RatingsForm.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","RatingsForm","Component","state","username","song","rating","onChange","e","setState","target","name","value","createRatings","preventDefault","post","then","props","resetState","toggle","editRatings","put","pk","defaultIfEmpty","componentDidMount","ratings","render","songs"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,cAAxB;;;AAGA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADgC;;AAAA,SAcxCC,QAdwC,GAc7BC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAhBuC;;AAAA,SAkBxCC,aAlBwC,GAkBxBL,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACM,cAAF;AACAf,MAAAA,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoB,KAAKG,KAAzB,EAAgCa,IAAhC,CAAqC,MAAM;AACzC,aAAKC,KAAL,CAAWC,UAAX;AACA,aAAKD,KAAL,CAAWE,MAAX;AACD,OAHD;AAID,KAxBuC;;AAAA,SA0BxCC,WA1BwC,GA0B1BZ,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACM,cAAF;AACAf,MAAAA,KAAK,CAACsB,GAAN,CAAUrB,OAAO,GAAG,KAAKG,KAAL,CAAWmB,EAA/B,EAAmC,KAAKnB,KAAxC,EAA+Ca,IAA/C,CAAoD,MAAM;AACxD,aAAKC,KAAL,CAAWC,UAAX;AACA,aAAKD,KAAL,CAAWE,MAAX;AACD,OAHD;AAID,KAhCuC;;AAAA,SAkCxCI,cAlCwC,GAkCvBX,KAAK,IAAI;AACxB,aAAOA,KAAK,KAAK,EAAV,GAAe,EAAf,GAAoBA,KAA3B;AACD,KApCuC;AAAA;;AAOxCY,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKP,KAAL,CAAWQ,OAAf,EAAwB;AACtB,YAAM;AAAErB,QAAAA,QAAF;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA;AAAlB,UAA6B,KAAKW,KAAL,CAAWQ,OAA9C;AACA,WAAKhB,QAAL,CAAc;AAAEL,QAAAA,QAAF;AAAYC,QAAAA,IAAZ;AAAkBC,QAAAA;AAAlB,OAAd;AACD;AACF;;AA0BDoB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,KAAX,GAAmB,KAAKP,WAAxB,GAAsC,KAAKP,aAA3D;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,QAAQ,EAAE,KAAKN,QAHjB;AAIE,UAAA,KAAK,EAAE,KAAKgB,cAAL,CAAoB,KAAKpB,KAAL,CAAWC,QAA/B;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAE,KAAKG,QAHjB;AAIE,UAAA,KAAK,EAAE,KAAKgB,cAAL,CAAoB,KAAKpB,KAAL,CAAWE,IAA/B;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAE,KAAKE,QAHjB;AAIE,UAAA,KAAK,EAAE,KAAKgB,cAAL,CAAoB,KAAKpB,KAAL,CAAWG,MAA/B;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA4BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAvEuC;;AA0E1C,eAAeL,WAAf","sourcesContent":["import React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\n\nimport axios from \"axios\";\n\nimport { API_URL } from \"../constants\";\n\n\nclass RatingsForm extends React.Component {\n  state = {\n    username: \"\",\n    song: \"\",\n    rating: \"\"\n  };\n\n  componentDidMount() {\n    if (this.props.ratings) {\n      const { username, song, rating } = this.props.ratings;\n      this.setState({ username, song, rating });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  createRatings = e => {\n    e.preventDefault();\n    axios.post(API_URL, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  editRatings = e => {\n    e.preventDefault();\n    axios.put(API_URL + this.state.pk, this.state).then(() => {\n      this.props.resetState();\n      this.props.toggle();\n    });\n  };\n\n  defaultIfEmpty = value => {\n    return value === \"\" ? \"\" : value;\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.props.songs ? this.editRatings : this.createRatings}>\n        <FormGroup>\n          <Label for=\"username\">Username</Label>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.username)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"song\">Song</Label>\n          <Input\n            type=\"text\"\n            name=\"song\"\n            onChange={this.onChange}\n            value={this.defaultIfEmpty(this.state.song)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"rating\">Rating</Label>\n            <Input\n              type=\"text\"\n              name=\"rating\"\n              onChange={this.onChange}\n              value={this.defaultIfEmpty(this.state.rating)}\n          />\n        </FormGroup>\n        <Button>Send</Button>\n      </Form>\n    );\n  }\n}\n\nexport default RatingsForm;\n"]},"metadata":{},"sourceType":"module"}